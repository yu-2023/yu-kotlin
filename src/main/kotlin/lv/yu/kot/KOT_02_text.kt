
/**
 *
 * Kotlin package     lv.yu.kot
 *
 * Kotlin program     KOT_02_text.kt     Apache License 2.0
 *
 * Copyright (c)      Yuri Utkin 2023    mob.+371 12345678     https://www.jago.lv
 *
 */
package lv.yu.kot

import javax.swing.JFrame
import javax.swing.ImageIcon
import javax.swing.JScrollPane
import javax.swing.JTextArea

import java.awt.BorderLayout

import javax.swing.WindowConstants

import javax.swing.SwingUtilities

//------------------------------

    /** frame */
    public var frame_02 = JFrame()

//------------------------------

/** KOT_02_text demonstrates Kotlin Text in Kotlin Frame */
fun KOT_02_text() {

    val imgURL     =           Thread.currentThread().getContextClassLoader().getResource("lv/yu/kot/KOT_resources/KOT.jpg")
    val icon_frame = ImageIcon(Thread.currentThread().getContextClassLoader().getResource("lv/yu/kot/KOT_resources/KOT.jpg"))

//------------------------------

    val title = "KOTLIN -- KOT_02_text -- v. 2023.12.12"

        frame_02.setTitle("     " + title)

        frame_02.setBounds(10+1*40+150, 10+1*40, 1000, 600)

        frame_02.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE)

        frame_02.setIconImage(icon_frame.getImage())

        frame_02.setLayout(BorderLayout())

        frame_02.isVisible = true

//------------------------------

    val textarea   = JTextArea()
    val scrollpane = JScrollPane(textarea)

        textarea.setText("" +
"        \r\n" +
"        üíûÔ∏èüíûÔ∏è EN\r\n" +
"        \r\n" +
"        Comparative analysis of programming in Java, Kotlin, Clojure, Groovy, Scala and Jython.\r\n" +
"        \r\n" +
"        How to Program Java, Kotlin, Clojure, Groovy, Scala and Jython Simultaneously.\r\n" +
"        \r\n" +
"        Integration of Java, Kotlin, Clojure, Groovy, Scala and Jython in one software product.\r\n" +
"        \r\n" +
"        \r\n" +
"        \r\n" +
"        üëãüëã RU\r\n" +
"        \r\n" +
"        –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Java, Kotlin, Clojure, Groovy, Scala –∏ Jython.\r\n" +
"        \r\n" +
"        –ö–∞–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞ Java, Kotlin, Clojure, Groovy, Scala –∏ Jython.\r\n" +
"        \r\n" +
"        –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Java, Kotlin, Clojure, Groovy, Scala –∏ Jython –≤ –æ–¥–Ω–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ.\r\n" +
"        \r\n" +
"        \r\n" +
"        \r\n" +
"        üå±üå± LV\r\n" +
"        \r\n" +
"        Java, Kotlin, Clojure, Groovy, Scala un Jython programmƒì≈°anas salƒ´dzino≈°ƒÅ analƒ´ze.\r\n" +
"        \r\n" +
"        KƒÅ programmƒìt Java, Kotlin, Clojure, Groovy, Scala un Jython vienlaicƒ´gi.\r\n" +
"        \r\n" +
"        Java, Kotlin, Clojure, Groovy, Scala un Jython integrƒÅcija vienƒÅ programmat≈´ras produktƒÅ.\r\n" +
"        \r\n" +
                         "")

        frame_02.getContentPane().add(scrollpane, BorderLayout.CENTER)

        frame_02.isVisible = true

//------------------------------

}  //  end KOT_02_text()

//------------------------------

fun main() {
             SwingUtilities.invokeLater(::KOT_02_text)
}  //  end main()

//------------------------------
